{"ast":null,"code":"var _jsxFileName = \"D:\\\\New_Chatbot\\\\ShortStoryGenratorWithAI\\\\src\\\\components\\\\leadercompo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Leadercompo() {\n  _s();\n  const backendUrl = \"http://localhost:5000\";\n  const [storyData, setData] = useState([]);\n  useEffect(() => {\n    fetch(`${backendUrl}/leaderboard`).then(response => {\n      console.log(\"Response from server:\", response);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      setData(data);\n      console.log(\"Data received from server:\", data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }, []);\n  // Use an empty dependency array to run this effect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: storyData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" leadercompo w-[100%] h-[15vh] rounded-3xl mt-[8%] flex flex-row \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[500%] left-[5%] absolute font-extrabold text-[white]\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[300%] left-[20%] absolute font-extrabold text-[white] mt-[20px] \",\n        children: item.prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[350%] right-[5%] absolute font-extrabold text-[#000000] mt-[20px]\",\n        children: [item.likemetre, \"/100\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Leadercompo, \"ExAy1hq7vSgyjyuR860JfSlvt6Y=\");\n_c = Leadercompo;\nvar _c;\n$RefreshReg$(_c, \"Leadercompo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Leadercompo","_s","backendUrl","storyData","setData","fetch","then","response","console","log","ok","Error","json","data","catch","error","children","map","item","index","className","fileName","_jsxFileName","lineNumber","columnNumber","prompt","likemetre","_c","$RefreshReg$"],"sources":["D:/New_Chatbot/ShortStoryGenratorWithAI/src/components/leadercompo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Leadercompo() {\r\n  const backendUrl = \"http://localhost:5000\";\r\n  const [storyData, setData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    fetch(`${backendUrl}/leaderboard`)\r\n      .then(response => {\r\n        console.log(\"Response from server:\", response);\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setData(data);\r\n        console.log(\"Data received from server:\", data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }, []);\r\n  // Use an empty dependency array to run this effect only once on component mount\r\n\r\n  return (\r\n    <div>\r\n      {storyData.map((item, index) => (\r\n        <div key={index} className=\" leadercompo w-[100%] h-[15vh] rounded-3xl mt-[8%] flex flex-row \">\r\n            <h1 className='text-[500%] left-[5%] absolute font-extrabold text-[white]'>{index+1}</h1>\r\n          <h1 className='text-[300%] left-[20%] absolute font-extrabold text-[white] mt-[20px] '>{item.prompt}</h1>\r\n          <h1 className='text-[350%] right-[5%] absolute font-extrabold text-[#000000] mt-[20px]'>{item.likemetre}/100</h1>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,UAAU,GAAG,uBAAuB;EAC1C,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAE,GAAEH,UAAW,cAAa,CAAC,CAC/BI,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;MAC9C,IAAI,CAACA,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDN,IAAI,CAACO,IAAI,IAAI;MACZT,OAAO,CAACS,IAAI,CAAC;MACbL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEI,IAAI,CAAC;IACjD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdP,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,oBACEhB,OAAA;IAAAiB,QAAA,EACGb,SAAS,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBpB,OAAA;MAAiBqB,SAAS,EAAC,mEAAmE;MAAAJ,QAAA,gBAC1FjB,OAAA;QAAIqB,SAAS,EAAC,4DAA4D;QAAAJ,QAAA,EAAEG,KAAK,GAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3FzB,OAAA;QAAIqB,SAAS,EAAC,wEAAwE;QAAAJ,QAAA,EAAEE,IAAI,CAACO;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzGzB,OAAA;QAAIqB,SAAS,EAAC,yEAAyE;QAAAJ,QAAA,GAAEE,IAAI,CAACQ,SAAS,EAAC,MAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHzGL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CAlCuBD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}